small int, javada short
real, javada float
ManyToOne ilk, sonra OneToMany yaz
Tarih LocalDate

@OneToMany(mappedBy = "order")
private List<OrderDetail> orderDetails;
//mapped by içi many to one da verdiğin değişken ismi
@ManyToOne
@JoinColumn(name="order_id")
private Order order;//şu order


Builder ile manuel mapping
Order order = Order.builder()
        .customer(Customer.builder().customerId(request.getCustomerId()).build())
        .orderDate(LocalDate.now())
        .employee(Employee.builder().employeeId(request.getEmployeeId()).build())
        .requiredDate(request.getRequiredDate())
        .shipAddress(request.getShipAddress())
        .shipCity(request.getShipCity())
        .shipName(request.getShipName())
        .shipRegion(request.getShipRegion())
        .build();
order = orderRepository.save(order);

128 bit, byte olması lazım, sanırım
BASE64 decode ediliyor
SECRET_KEY = "404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970";


role authorization one to many yöntemi, proje many to many'e evrildi
UserRoles class'ı
@Entity
@Table(name="user_roles")
@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class UserRoles {
    @Id
    @Column(name="id")
    @GeneratedValue()
    private Integer id;
    @Column(name = "role")
    private String role;

    @OneToMany(mappedBy = "role")
    private List<User> users;
}

User class'ı many to one bağlantısı
    @ManyToOne()
    @JoinColumn(name="role_id")
    private UserRoles role;


